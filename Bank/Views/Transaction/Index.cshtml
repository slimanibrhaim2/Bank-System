@model IEnumerable<Bank.Models.Transaction>

@{
ViewData["Title"] = "Transactions";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="text-primary">Transactions</h1>
                <a asp-action="Create" class="btn btn-success">
                    <i class="bi bi-plus-circle"></i> Create New Transaction
                </a>
            </div>

            <div class="card shadow">
                <div class="card-body">
                    <!-- Sort Button -->
                    <button id="sortDateBtn" class="btn btn-info mb-3">Sort by Date (Ascending)</button>
                    <table class="table table-hover table-bordered">
                        <thead class="table-dark">
                        <tr>
                            <th>Account Number</th>
                            <th>Transaction Type</th>
                            <th>Amount</th>
                            <th id="dateHeader">Transaction Date</th>
                        </tr>
                        </thead>
                        <tbody id="transactionsTableBody">
                        @if (!Model.Any())
                        {
                        <tr>
                            <td colspan="4" class="text-center text-muted">No transactions available.</td>
                        </tr>
                        }
                        else
                        {
                        @foreach (var transaction in Model)
                        {
                        <tr data-date="@transaction.TransactionDate.ToString("yyyy-MM-ddTHH:mm:ss")">
                            <td>@transaction.Account.AccountNumber</td>
                            <td>@transaction.TransactionType.Name</td>
                            <td>@transaction.Amount</td>
                            <td>@transaction.TransactionDate.ToString("MM/dd/yyyy hh:mm tt")</td> <!-- Human-readable DateTime -->
                        </tr>
                        }
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    // Initialize Bootstrap tooltips if needed
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
    });

    // JavaScript to sort the table rows by Transaction Date
    let sortOrder = 'asc'; // initial sort order

    document.getElementById('sortDateBtn').addEventListener('click', function () {
        let rows = Array.from(document.querySelectorAll('#transactionsTableBody tr'));

        // Sorting rows based on date attribute
        rows.sort((a, b) => {
            const dateA = new Date(a.getAttribute('data-date'));
            const dateB = new Date(b.getAttribute('data-date'));
            return sortOrder === 'asc' ? dateA - dateB : dateB - dateA;
        });

        // Rebuild the table body with sorted rows
        rows.forEach(row => document.getElementById('transactionsTableBody').appendChild(row));

        // Toggle the sort order and update the button text
        sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
        document.getElementById('sortDateBtn').textContent = `Sort by Date (${sortOrder === 'asc' ? 'Ascending' : 'Descending'})`;
    });
</script>
}
